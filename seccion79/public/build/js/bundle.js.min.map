{"version":3,"sources":["hora.js","ponente.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","addEventListener","terminoBusqueda","querySelectorAll","forEach","inputHiddenDia","inputHiddenHora","e","value","horaPrevia","classList","remove","target","name","Object","values","includes","async","url","resultado","fetch","eventos","listadoHora","li","add","horasTomadas","map","evento","hora_id","listadoHoraArray","Array","from","filter","dataset","horaId","horaDisponible","seleccionarHora","obtenerHorasDisponibles","json","console","log","buscarEventos","inputPonente","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","ponentesArray","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDIV","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector(\"#horas\");\r\n\r\n    if(horas){\r\n        let busqueda = {\r\n            categoria_id: \"\",\r\n            dia: \"\"\r\n        };\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        categoria.addEventListener(\"change\", terminoBusqueda);\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        dias.forEach(dia => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n\r\n        function terminoBusqueda(e){\r\n            //Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n\r\n            busqueda[e.target.name] = e.target.value;\r\n            if(Object.values(busqueda).includes(\"\")){\r\n                return;\r\n            }\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos(){\r\n            const {categoria_id, dia} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            try{\r\n                const resultado = await fetch(url);\r\n                const eventos = await resultado.json();\r\n                obtenerHorasDisponibles(eventos);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            //Reiniciar las horas\r\n            const listadoHora = document.querySelectorAll(\"#horas li\");\r\n            listadoHora.forEach(li => li.classList.add(\"horas__hora--desactivada\"));\r\n\r\n            //Comprobar eventos ya tomados, y quitar la variable de desactivada\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHoraArray = Array.from(listadoHora);\r\n\r\n            const resultado = listadoHoraArray.filter(li => !horasTomadas.includes(li.dataset.horaId))\r\n            resultado.forEach(li => li.classList.remove(\"horas__hora--desactivada\"));\r\n\r\n            const horasDisponnibles = document.querySelectorAll(\"#horas li:not(.horas__hora--desactivada)\");\r\n            horasDisponnibles.forEach(horaDisponible => horaDisponible.addEventListener(\"click\", seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e){\r\n            //Desactiva la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector(\".horas__hora--seleccionada\");\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n            //Agregar clase de seleccionado\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n    const inputPonente = document.querySelector(\"#ponentes\");\r\n    if(inputPonente){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n       \r\n        obtenerPonentes();\r\n        inputPonente.addEventListener(\"input\", buscarPonentes);\r\n\r\n        async function obtenerPonentes(){\r\n            const url = \"/api/ponentes\";\r\n    \r\n            try{\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                formatearPonentes(resultado);\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        function formatearPonentes(ponentesArray = []){\r\n            ponentes = ponentesArray.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n            if(busqueda.length > 3){\r\n                const expresion = new RegExp(busqueda, \"i\"); //Expresión regular donde no importa las mayúsculas o minúsculas\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente;\r\n                    }\r\n                })\r\n            }else{\r\n                ponentesFiltrados = [];\r\n            }\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0){\r\n                ponentesFiltrados.forEach(ponente =>{\r\n                    const ponenteHTML = document.createElement(\"LI\");\r\n                    ponenteHTML.classList.add(\"listado-ponentes__ponente\");\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    //Añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            }else{\r\n                const noResultados = document.createElement(\"P\");\r\n                noResultados.classList.add(\"listado-ponentes__no-resultado\");\r\n                noResultados.textContent = \"No hubo resultados para tu búsqueda\";\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n            const ponente = e.target;\r\n\r\n            const ponentePrevio = document.querySelector(\".listado-ponentes__ponente--seleccionado\");\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove(\"listado-ponentes__ponente--seleccionado\");\r\n            }\r\n\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\");\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n    if(tagsInput){\r\n        const tagsDIV = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector(\"[name=tags]\");\r\n        let tags = [];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== \"\"){\r\n            tags = tagsInputHidden.value.split(\",\");\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar por los cambios en el input\r\n        tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n        function guardarTag(e){\r\n            //El 44 hace referencia a la coma\r\n            if(e.keyCode === 44){\r\n                if(e.target.value.trim() === \"\" || e.target.value < 1){\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = \"\";\r\n                console.log(tags)\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDIV.textContent = \"\";\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement(\"LI\");\r\n                etiqueta.classList.add(\"formulario__tag\");\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDIV.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}